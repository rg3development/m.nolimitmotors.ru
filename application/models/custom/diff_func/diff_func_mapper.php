<?phpclass Diff_func_mapper extends MY_Model{	public function  __construct ()	{		parent::__construct();		$this->_table_content = 'modx_site_content';		$this->_table_phto = 'modx_site_tmplvar_contentvalues';		$this->_table_gal_albums = 'modx_gallery_albums';		$this->_table_gal_items = 'modx_gallery_items';		$this->_table_gal_albims_items = 'modx_gallery_album_items';	}	public function get_catalog_menu($pageId = null)	{		$this->db->select('id, pagetitle, parent, deleted');		$this->db->from($this->_table_content);		$this->db->where('deleted !=', 1);		if($pageId != null)			$this->db->where('id =', $pageId);		else			$this->db->where('parent =', 2);		$sections = $this->db->get()->result_array();				$i = 0;		foreach($sections as $item)		{			$this->db->select('id, contentid, value');			$this->db->from($this->_table_phto);			$this->db->where('contentid =', $item['id']);			$result = $this->db->get()->result_array();			if($item['id'] == 186)			{				$result[0]['id'] = 0;				$result[0]['contentid'] = 186;				$result[0]['value'] = 'upload/images/prew/brp2.png';			}			$sections[$i]['ph'] = $result;			$i++;		}		return $sections;	}	public function get_catalog_page()	{		if(!empty($_GET['page']) && is_numeric($_GET['page']))		{			$this->db->select('id, pagetitle, parent, deleted');			$this->db->from($this->_table_content);			$this->db->where('deleted !=', 1);			$this->db->where('parent =', $_GET['page']);			$sections = $this->db->get()->result_array();						$i = 0;			foreach($sections as $item)			{				$this->db->select('id, contentid, value');				$this->db->from($this->_table_phto);				$this->db->where('contentid =', $item['id']);				$result = $this->db->get()->result_array();				if($item['id'] == 186)				{					$result[0]['id'] = 0;					$result[0]['contentid'] = 186;					$result[0]['value'] = 'upload/images/prew/brp2.png';				}				$sections[$i]['ph'] = $result;				$i++;			}			$images = array();			if($_GET['page'] == 187)			{				/* получаем картинки сувениров */				$this->db->select('id, name');				$this->db->from($this->_table_gal_albums);				$this->db->where('name =', 'Сувениры');				$album = $this->db->get()->row_array();				$this->db->select('id, album, item');				$this->db->from($this->_table_gal_albims_items);				if(empty($album['id']))					$album['id'] = '';				$this->db->where('album =', $album['id']);				$tmp = $this->db->get()->result_array();				foreach($tmp as $imgItem)				{					$this->db->select('*');					$this->db->from($this->_table_gal_items);					$this->db->where('id =', $imgItem['item']);					$images[] = $this->db->get()->row_array();				}			}			$getLogoImg = $this->get_catalog_menu($_GET['page']);			$result['imgs'] = $images;			$result['sections'] = $sections;			$result['getLogoImg'] = $getLogoImg;			return $result;		}		return 0;	}	public function get_catalog_item()	{		if(!empty($_GET['item']) && is_numeric($_GET['item']))		{			$this->db->select('id, pagetitle, parent, deleted, content');			$this->db->from($this->_table_content);			$this->db->where('deleted !=', 1);			$this->db->where('id =', $_GET['item']);			$sections = $this->db->get()->result_array();			$i = 0;			foreach($sections as $item)			{				$this->db->select('id, contentid, value');				$this->db->from($this->_table_phto);				$this->db->where('contentid =', $item['id']);				$result = $this->db->get()->result_array();				if($item['id'] == 186)				{					$result[0]['id'] = 0;					$result[0]['contentid'] = 186;					$result[0]['value'] = 'upload/images/prew/brp2.png';				}				$sections[$i]['ph'] = $result;				/* get slider's images */				$images = array();				$this->db->select('id, name');				$this->db->from($this->_table_gal_albums);				$this->db->where('name =', $item['pagetitle']);				$album = $this->db->get()->row_array();				$this->db->select('id, album, item');				$this->db->from($this->_table_gal_albims_items);				if(empty($album['id']))					$album['id'] = '';				$this->db->where('album =', $album['id']);				$tmp = $this->db->get()->result_array();				foreach($tmp as $imgItem)				{					$this->db->select('*');					$this->db->from($this->_table_gal_items);					$this->db->where('id =', $imgItem['item']);					$images[] = $this->db->get()->row_array();				}								$sections[$i]['slider'] = $images;				$i++;			}			return $sections;		}		return 0;	}	public function sravnenie()	{		if(!empty($_GET['item1']) && is_numeric($_GET['item1']) || !empty($_GET['item2']) && is_numeric($_GET['item2']))		{			$item1 = $this->get_items_for_sr($_GET['item1']);			$item2 = $this->get_items_for_sr($_GET['item2']);			return array('item1' => $item1, 'item2' => $item2);		}		return 0;	}	public function get_items_for_sr($param)	{		if(!empty($param) && is_numeric($param))		{			$this->db->select('id, pagetitle, parent, deleted, content');			$this->db->from($this->_table_content);			$this->db->where('deleted !=', 1);			$this->db->where('id =', $param);			$sections = $this->db->get()->result_array();			$i = 0;			foreach($sections as $item)			{				$this->db->select('id, contentid, value');				$this->db->from($this->_table_phto);				$this->db->where('contentid =', $item['id']);				$result = $this->db->get()->result_array();				if($item['id'] == 186)				{					$result[0]['id'] = 0;					$result[0]['contentid'] = 186;					$result[0]['value'] = 'upload/images/prew/brp2.png';				}				$sections[$i]['ph'] = $result;				$i++;			}			return $sections;		}		return 0;	}	public function get_special()	{		$this->db->select('id, pagetitle, parent, deleted, content, introtext');		$this->db->from($this->_table_content);		$this->db->where('deleted !=', 1);		$this->db->where('parent =', 179);		$this->db->order_by('publishedon', 'DESC');		$sections = $this->db->get()->result_array();		$i = 0;		foreach($sections as $item)		{			$this->db->select('id, contentid, value');			$this->db->from($this->_table_phto);			$this->db->where('contentid =', $item['id']);			$result = $this->db->get()->result_array();			if($item['id'] == 186)			{				$result[0]['id'] = 0;				$result[0]['contentid'] = 186;				$result[0]['value'] = 'upload/images/prew/brp2.png';			}			$sections[$i]['ph'] = $result;			$i++;		}		return $sections;	}	public function get_catalog_xml($catalog_url)	{		$document = simplexml_load_file($catalog_url);		$data = array();		foreach ($document->database->table_data->row as $category)		{			$id = (string)$category->field[0];			$data['id'] = $id;			$data['type'] = (string)$category->field[1];			$data['contentType'] = (string)$category->field[2];			$data['pagetitle'] = (string)$category->field[3];			$data['longtitle'] = (string)$category->field[4];			$data['description'] = (string)$category->field[5];			$data['alias'] = (string)$category->field[6];			$data['link_attributes'] = (string)$category->field[7];			$data['published'] = (string)$category->field[8];			$data['pub_date'] = (string)$category->field[9];			$data['unpub_date'] = (string)$category->field[10];			$data['parent'] = (string)$category->field[11];			$data['isfolder'] = (string)$category->field[12];			$data['introtext'] = (string)$category->field[13];			$data['content'] = (string)$category->field[14];			$data['richtext'] = (string)$category->field[15];			$data['template'] = (string)$category->field[16];			$data['menuindex'] = (string)$category->field[17];			$data['searchable'] = (string)$category->field[18];			$data['cacheable'] = (string)$category->field[19];			$data['createdby'] = (string)$category->field[20];			$data['createdon'] = (string)$category->field[21];			$data['editedby'] = (string)$category->field[22];			$data['editedon'] = (string)$category->field[23];			$data['deleted'] = (string)$category->field[24];			$data['deletedon'] = (string)$category->field[25];			$data['deletedby'] = (string)$category->field[26];			$data['publishedon'] = (string)$category->field[27];			$data['publishedby'] = (string)$category->field[28];			$data['menutitle'] = (string)$category->field[29];			$data['donthit'] = (string)$category->field[30];			$data['privateweb'] = (string)$category->field[31];			$data['privatemgr'] = (string)$category->field[32];			$data['content_dispo'] = (string)$category->field[33];			$data['hidemenu'] = (string)$category->field[34];			$data['class_key'] = (string)$category->field[35];			$data['context_key'] = (string)$category->field[36];			$data['content_type'] = (string)$category->field[37];			$data['uri'] = (string)$category->field[38];			$data['uri_override'] = (string)$category->field[39];			$data['hide_children_in_tree'] = (string)$category->field[40];			$data['show_in_tree'] = (string)$category->field[41];			$data['properties'] = (string)$category->field[42];			$this->db->from($this->_table_content);			$this->db->where('id', $data['id']);			$result=$this->db->get()->row_array();			if($result != null)			{				$this->db->where('id', $data['id']);				$this->db->update($this->_table_content, $data);				print_r("Update!");			}			else			{				$this->db->insert($this->_table_content, $data);				print_r("Insert!");			}		}		return;	}	public function get_ph_xml($ph_url)	{		$source = "http://nolimitmotors.ru/"; // Ссылка на изображение		$upload_dir = "upload/images/"; // Куда сохраняем (УКАЗЫВАТЬ ТУ ЖЕ ПАПКУ, ЧТО И В ФУНКЦИИ!!!)		$save_as = ".png"; // C каким именем сохранять		$document = simplexml_load_file($ph_url);		$data = array();		foreach ($document->database->table_data->row as $category)		{			$id = (string)$category->field[0];			$data['id'] = $id;			$data['tmplvarid'] = (string)$category->field[1];			$data['contentid'] = (string)$category->field[2];			$data['value'] = (string)$category->field[3];			if (strpos($data['value'], '.jpg') !== false ||				strpos($data['value'], '.gif') !== false ||				strpos($data['value'], '.png') !== false)			{				$tmp = explode('/', $data['value']);				$lastElem = $tmp[count($tmp)-1];				$lastElem = str_replace('.jpg', '', $lastElem);				$lastElem = str_replace('.gif', '', $lastElem);				$lastElem = str_replace('.png', '', $lastElem);				$cur = file_put_contents($upload_dir.$lastElem.$save_as, file_get_contents($source.$data['value']));				if($cur != 0)				{					// Уменьшаем					if($this->resizePhoto($lastElem.$save_as, 'upload/images/', 'upload/images/prew/'))					{						echo "Изображение успешно сохранено и уменьшено\n";						$data['value'] = "upload/images/prew/".$lastElem.$save_as;					}					else					{						echo "Изображение успешно сохранено, но уменьшить не удалось!\n";					}				}				else				{					echo "Изображение с удалённого сервера загрузить не удалось!\n";				}			}			$this->db->from($this->_table_phto);			$this->db->where('id', $data['id']);			$result=$this->db->get()->row_array();			if($result != null)			{				$this->db->where('id', $data['id']);				$this->db->update($this->_table_phto, $data);				print_r("Update!\n");			}			else			{				$this->db->insert($this->_table_phto, $data);				print_r("Insert!\n");			}		}		return;	}	public function get_gal_albums_xml($catalog_url)	{		$document = simplexml_load_file($catalog_url);		$data = array();		foreach ($document->database->table_data->row as $category)		{			$id = (string)$category->field[0];			$data['id'] = $id;			$data['parent'] = (string)$category->field[1];			$data['name'] = (string)$category->field[2];			$data['description'] = (string)$category->field[3];			$data['createdon'] = (string)$category->field[4];			$data['createdby'] = (string)$category->field[5];			$data['rank'] = (string)$category->field[6];			$data['active'] = (string)$category->field[7];			$data['prominent'] = (string)$category->field[8];			$data['watermark'] = (string)$category->field[9];			$this->db->from($this->_table_gal_albums);			$this->db->where('id', $data['id']);			$result=$this->db->get()->row_array();			if($result != null)			{				$this->db->where('id', $data['id']);				$this->db->update($this->_table_gal_albums, $data);				print_r("Update!");			}			else			{				$this->db->insert($this->_table_gal_albums, $data);				print_r("Insert!");			}		}		return;	}	public function get_gal_items_xml($catalog_url)	{		$source = "http://nolimitmotors.ru/assets/components/gallery/connector.php?action=web/phpthumb&w=800&h=800&zc=0&far=&q=90&src=%2Fassets%2Fgallery%2F"; // Ссылка на изображение 		$upload_dir = "upload/images/"; // Куда сохраняем (УКАЗЫВАТЬ ТУ ЖЕ ПАПКУ, ЧТО И В ФУНКЦИИ!!!)		$save_as = ".png"; // C каким именем сохранять		$document = simplexml_load_file($catalog_url);		$data = array();		foreach ($document->database->table_data->row as $category)		{			$id = (string)$category->field[0];			$data['id'] = $id;			$data['name'] = (string)$category->field[1];			$data['filename'] = (string)$category->field[2];			$data['description'] = (string)$category->field[3];			$data['mediatype'] = (string)$category->field[4];			$data['url'] = (string)$category->field[5];			$data['createdon'] = (string)$category->field[6];			$data['createdby'] = (string)$category->field[7];			$data['active'] = (string)$category->field[8];			$data['duration'] = (string)$category->field[9];			$data['streamer'] = (string)$category->field[10];			$data['watermark_pos'] = (string)$category->field[11];			if (strpos($data['filename'], '.jpg') !== false ||				strpos($data['filename'], '.gif') !== false ||				strpos($data['filename'], '.png') !== false)			{				$tmp = explode('/', $data['filename']);				$preLastElem = $tmp[count($tmp)-2];				$lastElem = $tmp[count($tmp)-1];				$lastElemForLink = $lastElem;				$lastElem = str_replace('.jpg', '', $lastElem);				$lastElem = str_replace('.gif', '', $lastElem);				$lastElem = str_replace('.png', '', $lastElem);				$cur = file_put_contents($upload_dir.$lastElem.$save_as, file_get_contents($source.$preLastElem.'%2F'.$lastElemForLink));				if($cur != 0)				{					// Уменьшаем					if($this->resizePhoto($lastElem.$save_as, $upload_dir, 'upload/images/album/'))					{						echo "Изображение успешно сохранено и уменьшено\n";						$data['filename'] = "upload/images/album/".$lastElem.$save_as;					}					else					{						echo "Изображение успешно сохранено, но уменьшить не удалось!\n";					}				}				else				{					echo "Изображение с удалённого сервера загрузить не удалось!\n";				}			}			$this->db->from($this->_table_gal_items);			$this->db->where('id', $data['id']);			$result=$this->db->get()->row_array();			if($result != null)			{				$this->db->where('id', $data['id']);				$this->db->update($this->_table_gal_items, $data);				print_r("Update!");			}			else			{				$this->db->insert($this->_table_gal_items, $data);				print_r("Insert!");			}		}		return;	}	public function get_gal_album_items_xml($catalog_url)	{		$document = simplexml_load_file($catalog_url);		$data = array();		foreach ($document->database->table_data->row as $category)		{			$id = (string)$category->field[0];			$data['id'] = $id;			$data['item'] = (string)$category->field[1];			$data['album'] = (string)$category->field[2];			$data['rank'] = (string)$category->field[3];			$this->db->from($this->_table_gal_albims_items);			$this->db->where('id', $data['id']);			$result=$this->db->get()->row_array();			if($result != null)			{				$this->db->where('id', $data['id']);				$this->db->update($this->_table_gal_albims_items, $data);				print_r("Update!");			}			else			{				$this->db->insert($this->_table_gal_albims_items, $data);				print_r("Insert!");			}		}		return;	}	// Функция для изменения размеров изображения	public function resizePhoto($src, $source, $preview_dir)	{		$source = $source.$src; //наш исходник				// Проверяем, существует ли файл: если существует - ресайзим его		if(file_exists($source))		{			$preview_dir = $preview_dir.$src; // путь для сохранения превьюшки 			$setSize = getimagesize($source);			$width = $setSize[0]/2; //параметр ширины превью			$height = $setSize[1]/2; //параметр высоты превью			if($width < 320 || $height < 320)			{				$width = $setSize[0]/1.5;				$height = $setSize[1]/1.5;			}			$rgb = 0xffffff; //цвет заливки несоответствия 0xFFFFFF - белый			$size = getimagesize($source);//узнаем размеры картинки (дает нам масcив size)			//определяем тип файла			$format = strtolower(substr($size['mime'], strpos($size['mime'], '/')+1));			$icfunc = "imagecreatefrom" . $format;   //определение функции соответственно типу файла						//если нет такой функции прекращаем работу скрипта			if (!function_exists($icfunc)) return false; 			$x_ratio = $width / $size[0]; //пропорция ширины будущего превью			$y_ratio = $height / $size[1]; //пропорция высоты будущего превью			$ratio       = min($x_ratio, $y_ratio);			$use_x_ratio = ($x_ratio == $ratio); //соотношения ширины к высоте			$new_width   = $use_x_ratio  ? $width  : floor($size[0] * $ratio); //ширина превью 			$new_height  = !$use_x_ratio ? $height : floor($size[1] * $ratio); //высота превью			//расхождение с заданными параметрами по ширине			$new_left    = $use_x_ratio  ? 0 : floor(($width - $new_width) / 2);			//расхождение с заданными параметрами по высоте			$new_top     = !$use_x_ratio ? 0 : floor(($height - $new_height) / 2);			//создаем вспомогательное изображение пропорциональное превью			$img = imagecreatetruecolor($width,$height);			imagefill($img, 0, 0, $rgb); //заливаем его…			$photo = $icfunc($source); //достаем наш исходник						imagecopyresampled($img, $photo, $new_left, $new_top, 0, 0, $new_width, $new_height, $size[0], $size[1]); //копируем на него нашу превью с учетом расхождений           						$func = 'image'.$format;			$func($img, $preview_dir); //сохраняем результат (превью картинки)			// Очищаем память после выполнения скрипта			imagedestroy($img);			imagedestroy($photo);						return true;		}	}}